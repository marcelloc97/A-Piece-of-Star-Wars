{"version":3,"sources":["assets/logo.svg","services/api.js","utils/fetchAPIData.js","pages/Home/index.js","pages/Story/index.js","utils/calculateShipCapacity.js","routes.js","App.js","index.js"],"names":["module","exports","api","axios","create","baseURL","fetchData","a","get","han","hanSolo","data","ship","millFalcon","films","film","chars","i","value","characters","Math","floor","random","length","slice","replace","undefined","push","response","randomChars","map","r","console","log","Home","history","useState","name","setName","weight","setWeight","apiData","setApiData","loading","setLoading","canAnimate","setCanAnimate","hasData","setHasData","useEffect","fetchAPIData","nameData","localStorage","getItem","weightData","parseFloat","load","className","autoplay","opacity","translateY","duration","easing","style","marginBottom","color","type","complete","src","logo","alt","textAlign","onSubmit","e","preventDefault","setItem","newData","htmlFor","datatype","onChange","target","placeholder","required","valueAsNumber","onClick","clear","Story","shipCapacity","setShipCapacity","state","location","maxCapacity","cargo_capacity","capacity","mass","calculateShipCapacity","autoPlay","passengers","onAnimationEnd","Routes","path","exact","component","App","ReactDOM","render","document","getElementById"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,kC,uQCM5BC,E,OAJHC,EAAMC,OAAO,CACvBC,QAAS,2BCDI,SAAeC,IAA9B,+B,4CAAe,kDAAAC,EAAA,+EAOOL,EAAIM,IAAI,cAPf,cAOLC,EAPK,OAQXC,EAAUD,EAAIE,KARH,SAWQT,EAAIM,IAAI,iBAXhB,cAWLI,EAXK,OAYXC,EAAaD,EAAKD,KAZP,UAeST,EAAIM,IAAI,YAfjB,QAsBX,IAPMM,EAfK,OAgBXC,EAAOD,EAAMH,KAGbK,EAAQ,GAGCC,EAAI,EAAGA,GAAK,EAAGA,IASR,MAPVC,EAAQH,EAAKI,WACfC,KAAKC,MAAMD,KAAKE,SAAWP,EAAKI,WAAWI,SAE1CC,MAAM,GAAI,IACVC,QAAQ,IAAK,OAIdP,EAAQH,EAAKI,WACXC,KAAKC,MAAMD,KAAKE,SAAWP,EAAKI,WAAWI,SAE1CC,MAAM,GAAI,IACVC,QAAQ,IAAK,UAEJC,IAAVR,IACFA,EAAQH,EAAKI,WACXC,KAAKC,MAAMD,KAAKE,SAAWP,EAAKI,WAAWI,SAE1CC,MAAM,GAAI,IACVC,QAAQ,IAAK,KAGlBT,EAAMW,KAAKT,GAMPU,EAAW,GAGRX,EAAI,EAvDF,aAuDKA,EAAI,GAvDT,6BAyDTW,EAzDS,UAyDW1B,EAAIM,IAAJ,iBAAkBQ,EAAMC,KAzDnC,yBAyDAU,KAzDA,wBAuDYV,IAvDZ,+BA6DXY,EAAcD,EAASE,KAAI,SAAAC,GAAC,OAAIA,EAAEpB,QA7DvB,kBAgEJ,CACLD,UACAG,aACAE,OACAc,gBApES,kCAwEXG,QAAQC,IAAR,MAxEW,2D,iDCSA,SAASC,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAAW,EAEhBC,mBAAS,IAFO,mBAEjCC,EAFiC,KAE3BC,EAF2B,OAGZF,mBAAS,IAHG,mBAGjCG,EAHiC,KAGzBC,EAHyB,OAIVJ,mBAAS,IAJC,mBAIjCK,EAJiC,KAIxBC,EAJwB,OAMVN,oBAAS,GANC,mBAMjCO,EANiC,KAMxBC,EANwB,OAOJR,oBAAS,GAPL,mBAOjCS,EAPiC,KAOrBC,EAPqB,OAQVV,oBAAS,GARC,mBAQjCW,EARiC,KAQxBC,EARwB,KAuGxC,OA5FAC,qBAAU,WAAM,4CAEd,8BAAA1C,EAAA,2EAGImC,EAHJ,SAGqBQ,IAHrB,kCAIIN,GAAW,GAEPO,EAAWC,aAAaC,QAAQ,QAClCC,EAAaF,aAAaC,QAAQ,UAEhCF,GAAYG,IACdN,GAAW,GACXV,EAAQa,GACRX,EAAUe,WAAWD,KAZ3B,kDAgBItB,QAAQC,IAAR,MAhBJ,2DAFc,0DAqBduB,KACC,IAuED,6BAASC,UAAU,aAChBd,GACC,oCACE,kBAAC,IAAD,CACEe,UAAU,EACVC,QAAS,CAAC,EAAG,GACbC,WAAY,EAAE,GAAI,GAClBC,SAAU,IACVC,OAAQ,iBAER,wBACEC,MAAO,CACLC,aAAc,SAFlB,iCAOA,kBAAC,IAAD,CAAcC,MAAM,SAASC,KAAK,YAItCvB,GACA,oCACE,kBAAC,IAAD,CACEgB,QAASd,EAAa,CAAC,EAAG,GAAK,EAC/Be,WAAYf,EAAa,EAAE,GAAI,GAAK,EACpCgB,SAAU,IACVC,OAAQ,gBACRK,SAAU,WACRrB,GAAc,KAGhB,yBAAKsB,IAAKC,IAAMC,IAAI,mBACnBvB,GACC,wBAAIgB,MAAO,CAAEQ,UAAW,SAAUP,aAAc,SAAhD,6DACuD,IACrD,wCAFF,wBAKF,0BAAMQ,SA3GhB,SAAoBC,GAClBA,EAAEC,iBAGF,IAAIvB,EAAWC,aAAaC,QAAQ,QACrBD,aAAaC,QAAQ,WAGhBF,IAClBC,aAAauB,QAAQ,OAAQtC,GAC7Be,aAAauB,QAAQ,SAAUpC,IAGjC,IAEE,IAAMqC,EAAU,CACdnC,UACAJ,OACAE,UAIW,KAATF,GAA0B,IAAXE,GAAcJ,EAAQR,KAAK,SAAUiD,GACxD,MAAOH,GAEPzC,QAAQC,IAAIwC,MAmFJ,2BAAOI,QAAQ,QAAf,QACA,2BACEX,KAAK,OACLY,SAAS,OACTC,SAAU,SAACN,GAAD,OAAOnC,EAAQmC,EAAEO,OAAO9D,QAClCA,MAAOmB,EACP4C,YAAY,eACZC,UAAQ,IAEV,2BAAOL,QAAQ,UAAf,QACA,2BACEX,KAAK,SACLY,SAAS,SACTC,SAAU,SAACN,GAAD,OAAOjC,EAAUiC,EAAEO,OAAOG,gBACpCjE,MAAOqB,EACP0C,YAAY,SACZC,UAAQ,IAEV,yBAAKzB,UAAU,eACb,4BAAQS,KAAK,UAAb,UACA,4BAAQkB,QAnGtB,SAAwBX,GAQtB,GAPAA,EAAEC,iBAGFpC,EAAQc,aAAaC,QAAQ,SAC7Bb,EAAUY,aAAaC,QAAQ,WAGlB,OAAThB,GAA4B,OAAXE,EACnB,IAEE,IAAMqC,EAAU,CACdnC,UACAJ,OACAE,OAAQgB,WAAWhB,IAIrB,GAAa,KAATF,GAA0B,IAAXE,EACd,OAD4BJ,EAAQR,KAAK,SAAUiD,GAExD,MAAOH,GAEPzC,QAAQC,IAAIwC,MA6EJ,aAEF,4BAAQW,QA1EpB,SAAwBX,GACtBA,EAAEC,iBAGFtB,aAAaiC,QACb/C,EAAQ,IACRE,EAAU,GACVQ,GAAW,IAmEgCX,KAAK,QAAtC,oB,MCzKC,SAASiD,EAAT,GAA6B,IAAZnD,EAAW,EAAXA,QAAW,EACDC,mBAAS,GADR,mBAClCmD,EADkC,KACpBC,EADoB,KAYzC,OARAvC,qBAAU,WAER,IAAIwC,EAAQtD,EAAQuD,SAASD,MAG7BD,ECjBW,YAAqD,IAApB/C,EAAmB,EAAnBA,QAASF,EAAU,EAAVA,OAEvD,IAYE,IAVA,IAAMoD,EAAclD,EAAQ5B,WAAW+E,eAOnCC,EAFmC,IAAXF,EAKnB1E,EAAI,EAAGA,EAAIwB,EAAQZ,YAAYN,OAAQN,IAE9C4E,GAAYtC,WAAWd,EAAQZ,YAAYZ,GAAG6E,MAUhD,OANAD,GAAYtD,EAOZ,MAAOkC,GACPzC,QAAQC,IAAIwC,IDXIsB,CAAsBN,MACrC,CAACtD,EAAQuD,SAASD,QAGnB,oCACE,2BAAOO,UAAU,GACf,4BACE5B,IAAI,mEACJF,KAAK,cAEP,4BACEE,IAAI,mEACJF,KAAK,gBAIT,yBAAKT,UAAU,SAEf,6BAASA,UAAU,SAAnB,gEAGA,6BAASA,UAAU,QACjB,yBAAKW,IAAKC,IAAMC,IAAI,2BAGtB,6BAASb,UAAU,aACjB,yBAAKA,UAAU,SACb,yBAAKA,UAAU,SACb,gDACA,iDAEF,iMAKA,6BACA,6PAMA,6BACA,6CACkBtB,EAAQuD,SAASD,MAAMhD,QAAQ/B,QAAQ2B,KADzD,6BAEoBF,EAAQuD,SAASD,MAAMhD,QAAQ5B,WAAWwB,KAAM,IAFpE,6BAG6B,IAC1BF,EAAQuD,SAASD,MAAMhD,QAAQ5B,WAAW+E,eAJ7C,oDAOA,6BACA,yLAGYzD,EAAQuD,SAASD,MAAMhD,QAAQ5B,WAAWoF,WAAY,IAHlE,8FAOA,6BACA,0GAEqB9D,EAAQuD,SAASD,MAAMpD,KAF5C,qCAKA,6BACA,qFAC0D,IACvDkD,EAFH,MAGGA,EACCpD,EAAQuD,SAASD,MAAMhD,QAAQ5B,WAAW+E,gBAD3C,kGAGAL,EACCpD,EAAQuD,SAASD,MAAMhD,QAAQ5B,WAAW+E,gBAD3C,yIAOP,6BACEnC,UAAU,SACVyC,eAAgB,WACd/D,EAAQR,KAAK,OAGf,gFACA,+DEjGR,IAWewE,EAXA,WACb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWpE,IACjC,kBAAC,IAAD,CAAOkE,KAAK,SAASE,UAAWhB,O,MCFzBiB,MAJf,WACE,OAAO,kBAAC,EAAD,OCFTC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ebe8a5ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6dcff896.svg\";","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://swapi.dev/api/\",\r\n});\r\n\r\nexport default api;\r\n","import api from \"../services/api\";\r\n\r\nexport default async function fetchData() {\r\n  // create vars to store api information\r\n  let hanSolo, millFalcon, film, chars, randomChars;\r\n\r\n  // try geting all required data\r\n  try {\r\n    // get the Han Solo data and store to it\r\n    const han = await api.get(\"people/14/\");\r\n    hanSolo = han.data;\r\n\r\n    // get the ship data and store to it\r\n    const ship = await api.get(\"starships/10/\");\r\n    millFalcon = ship.data;\r\n\r\n    // get the movie data and stores too\r\n    const films = await api.get(\"films/1/\");\r\n    film = films.data;\r\n\r\n    // create a new Array on chars\r\n    chars = [];\r\n\r\n    // then loop 5 times to get random chars from the film\r\n    for (let i = 0; i <= 4; i++) {\r\n      // set a value looping through film.characters, randomizing the value and getting just the id\r\n      let value = film.characters[\r\n        Math.floor(Math.random() * film.characters.length)\r\n      ]\r\n        .slice(28, 30)\r\n        .replace(\"/\", \"\");\r\n\r\n      // if the value is the same of Han Solo, roll again\r\n      if (value === 14)\r\n        value = film.characters[\r\n          Math.floor(Math.random() * film.characters.length)\r\n        ]\r\n          .slice(28, 30)\r\n          .replace(\"/\", \"\");\r\n      // else if value for some case got undefined, re-roll to fix it\r\n      if (value === undefined)\r\n        value = film.characters[\r\n          Math.floor(Math.random() * film.characters.length)\r\n        ]\r\n          .slice(28, 30)\r\n          .replace(\"/\", \"\");\r\n\r\n      // then push it to array\r\n      chars.push(value);\r\n    }\r\n\r\n    //// Random People Data ////\r\n\r\n    // create a new Array to get the response from api\r\n    const response = [];\r\n\r\n    // loop response and get data from api\r\n    for (let i = 0; i < 4; i++) {\r\n      // push that data\r\n      response.push(await api.get(`people/${chars[i]}`));\r\n    }\r\n\r\n    // convert AxiosResponse into an Array and store to previous defined randomChars variable\r\n    randomChars = response.map(r => r.data);\r\n\r\n    // return all data\r\n    return {\r\n      hanSolo,\r\n      millFalcon,\r\n      film,\r\n      randomChars\r\n    };\r\n  } catch (e) {\r\n    // else an error occurs, log it\r\n    console.log(e);\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport ReactLoading from \"react-loading\";\r\nimport Anime from \"react-anime\";\r\n\r\nimport fetchAPIData from \"../../utils/fetchAPIData\";\r\n\r\nimport logo from \"../../assets/logo.svg\";\r\n\r\nimport \"./style.css\";\r\n\r\nexport default function Home({ history }) {\r\n  // create states to store data\r\n  const [name, setName] = useState(\"\"); // this for the user's name\r\n  const [weight, setWeight] = useState(\"\"); // this for the user's weight\r\n  const [apiData, setApiData] = useState({}); // this for api data\r\n\r\n  const [loading, setLoading] = useState(true); // this for loading data\r\n  const [canAnimate, setCanAnimate] = useState(true); // this to limit animation repeating\r\n  const [hasData, setHasData] = useState(false); // this to check if has some data loaded\r\n\r\n  // call a useEffect to load data from API through fetchAPIData\r\n  useEffect(() => {\r\n    // create the function load\r\n    async function load() {\r\n      // try doing the fetch and store\r\n      try {\r\n        setApiData(await fetchAPIData());\r\n        setLoading(false);\r\n\r\n        let nameData = localStorage.getItem(\"name\"),\r\n          weightData = localStorage.getItem(\"weight\");\r\n\r\n        if (nameData && weightData) {\r\n          setHasData(true);\r\n          setName(nameData);\r\n          setWeight(parseFloat(weightData));\r\n        }\r\n      } catch (e) {\r\n        // if somehow occurs an error, print on console\r\n        console.log(e);\r\n      }\r\n    }\r\n    load(); // call the function\r\n  }, []);\r\n\r\n  // create a handling function to form\r\n  function handleData(e) {\r\n    e.preventDefault(); // prevent its default\r\n\r\n    // get name and weight from localStorage\r\n    let nameData = localStorage.getItem(\"name\"),\r\n      weightData = localStorage.getItem(\"weight\");\r\n\r\n    // if they are empty, store the input data\r\n    if (!weightData && !nameData) {\r\n      localStorage.setItem(\"name\", name);\r\n      localStorage.setItem(\"weight\", weight);\r\n    }\r\n\r\n    try {\r\n      // try creating a new object\r\n      const newData = {\r\n        apiData,\r\n        name,\r\n        weight,\r\n      };\r\n\r\n      // then navigating to /story page passing newData as state\r\n      if (name !== \"\" && weight !== 0) history.push(\"/story\", newData);\r\n    } catch (e) {\r\n      // else, shows the error on console\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  function handleLoadData(e) {\r\n    e.preventDefault(); // prevent its default\r\n\r\n    // get name and weight from localStorage\r\n    setName(localStorage.getItem(\"name\"));\r\n    setWeight(localStorage.getItem(\"weight\"));\r\n\r\n    // if they aren't empty, store the input data\r\n    if (name !== null && weight !== null) {\r\n      try {\r\n        // try creating a new object\r\n        const newData = {\r\n          apiData,\r\n          name,\r\n          weight: parseFloat(weight),\r\n        };\r\n\r\n        // then navigating to /story page passing newData as state\r\n        if (name !== \"\" && weight !== 0) history.push(\"/story\", newData);\r\n        else return;\r\n      } catch (e) {\r\n        // else, shows the error on console\r\n        console.log(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleWipeData(e) {\r\n    e.preventDefault(); // prevent its default\r\n\r\n    // clear all data in your localStorage\r\n    localStorage.clear();\r\n    setName(\"\");\r\n    setWeight(0);\r\n    setHasData(false);\r\n  }\r\n\r\n  // just the React JSX code\r\n  return (\r\n    <section className=\"container\">\r\n      {loading && (\r\n        <>\r\n          <Anime\r\n            autoplay={true}\r\n            opacity={[0, 1]}\r\n            translateY={[-50, 0]}\r\n            duration={500}\r\n            easing={\"easeInOutSine\"}\r\n          >\r\n            <h2\r\n              style={{\r\n                marginBottom: \"30px\",\r\n              }}\r\n            >\r\n              BUSCANDO INFORMAÇÕES...\r\n            </h2>\r\n            <ReactLoading color=\"yellow\" type=\"spin\" />\r\n          </Anime>\r\n        </>\r\n      )}\r\n      {!loading && (\r\n        <>\r\n          <Anime\r\n            opacity={canAnimate ? [0, 1] : 1}\r\n            translateY={canAnimate ? [-50, 0] : 0}\r\n            duration={500}\r\n            easing={\"easeInOutSine\"}\r\n            complete={() => {\r\n              setCanAnimate(false);\r\n            }}\r\n          >\r\n            <img src={logo} alt=\"star wars logo\" />\r\n            {hasData && (\r\n              <h5 style={{ textAlign: \"center\", marginBottom: \"10px\" }}>\r\n                Existe informação salva em seu computador, pressione{\" \"}\r\n                <em>Carregar</em> para carregá-las\r\n              </h5>\r\n            )}\r\n            <form onSubmit={handleData}>\r\n              <label htmlFor=\"name\">Nome</label>\r\n              <input\r\n                type=\"text\"\r\n                datatype=\"name\"\r\n                onChange={(e) => setName(e.target.value)}\r\n                value={name}\r\n                placeholder=\"Ex: Marcello\"\r\n                required\r\n              />\r\n              <label htmlFor=\"weight\">Peso</label>\r\n              <input\r\n                type=\"number\"\r\n                datatype=\"weight\"\r\n                onChange={(e) => setWeight(e.target.valueAsNumber)}\r\n                value={weight}\r\n                placeholder=\"Ex: 72\"\r\n                required\r\n              />\r\n              <div className=\"buttonGroup\">\r\n                <button type=\"submit\">Salvar</button>\r\n                <button onClick={handleLoadData}>Carregar</button>\r\n              </div>\r\n              <button onClick={handleWipeData} name=\"wipe\">\r\n                Limpar dados\r\n              </button>\r\n            </form>\r\n          </Anime>\r\n        </>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport calculateShipCapacity from \"../../utils/calculateShipCapacity\";\r\n\r\nimport logo from \"../../assets/logo.svg\";\r\n\r\nimport \"./style.css\";\r\n\r\nexport default function Story({ history }) {\r\n  const [shipCapacity, setShipCapacity] = useState(0); // gets calculated ship actual capacity\r\n\r\n  // calls useEffect to load and calculate ship actual capacity\r\n  useEffect(() => {\r\n    // get the state from history.location.state\r\n    let state = history.location.state;\r\n\r\n    // calls the calculateShipCapacity function passing state as parameter\r\n    setShipCapacity(calculateShipCapacity(state)); // set it to shipCapacity\r\n  }, [history.location.state]); // here, the useEffect Hook updates everytime history.location.state is changed\r\n\r\n  return (\r\n    <>\r\n      <audio autoPlay={true}>\r\n        <source\r\n          src=\"https://s.cdpn.io/1202/Star_Wars_original_opening_crawl_1977.ogg\"\r\n          type=\"audio/ogg\"\r\n        />\r\n        <source\r\n          src=\"https://s.cdpn.io/1202/Star_Wars_original_opening_crawl_1977.mp3\"\r\n          type=\"audio/mpeg\"\r\n        />\r\n      </audio>\r\n\r\n      <div className=\"fade\"></div>\r\n\r\n      <section className=\"intro\">\r\n        Há muito tempo, em uma galaxia distante, bem distante....\r\n      </section>\r\n      <section className=\"logo\">\r\n        <img src={logo} alt=\"star wars logo yellow\" />\r\n      </section>\r\n\r\n      <section className=\"star-wars\">\r\n        <div className=\"crawl\">\r\n          <div className=\"title\">\r\n            <p>EPISÓDIO EXTRA</p>\r\n            <h1>DESAFIO MERCADOU</h1>\r\n          </div>\r\n          <p>\r\n            É um período de guerra civil. Espaçonaves rebeldes, vindos de uma\r\n            base escondida, tiveram sua primeira vitória contra o Império\r\n            Galático do mal.\r\n          </p>\r\n          <br />\r\n          <p>\r\n            Durante a batalha, rebeldes espiam controlados para roubar os planos\r\n            secretos da arma suprema do Império, a ESTRELA DA MORTE, uma estação\r\n            espacial blindada com poder suficiente para destruir um planeta\r\n            inteiro....\r\n          </p>\r\n          <br />\r\n          <p>\r\n            Enquanto isso, {history.location.state.apiData.hanSolo.name} está\r\n            pilotando a nave {history.location.state.apiData.millFalcon.name}{\" \"}\r\n            com capacidade de carca de{\" \"}\r\n            {history.location.state.apiData.millFalcon.cargo_capacity}\r\n            kg. Sua capacidade atual está ocupada em 99%.\r\n          </p>\r\n          <br />\r\n          <p>\r\n            Em um certo momento, Han Solo percebe que está próximo de um planeta\r\n            conhecido. Muda seu curso em direção ao mesmo. Ao pousar, decide\r\n            embarcar {history.location.state.apiData.millFalcon.passengers}{\" \"}\r\n            passageiros do filme Uma Nova Esperança. Este sexto passageiro é\r\n            alguém especial.\r\n          </p>\r\n          <br />\r\n          <p>\r\n            Han Solo pergunta o nome do sexto passageiro que responde\r\n            intitulando-se de {history.location.state.name}. Han Solo o convida\r\n            à entrar.\r\n          </p>\r\n          <br />\r\n          <p>\r\n            Com o peso dos passageiros, a Millenium Falcon chegou a{\" \"}\r\n            {shipCapacity}kg.\r\n            {shipCapacity >\r\n              history.location.state.apiData.millFalcon.cargo_capacity &&\r\n              ` Infelizmente a nave chegou em sua capacidade máxima, e o sexto passageiro teve que sair....`}\r\n            {shipCapacity <\r\n              history.location.state.apiData.millFalcon.cargo_capacity &&\r\n              ` Felizmente a capacidade atual da nave não excedeu o limite, permitindo que o sexto passageiro pudesse viajar tranquilamente....`}\r\n          </p>\r\n        </div>\r\n      </section>\r\n\r\n      <section\r\n        className=\"ending\"\r\n        onAnimationEnd={() => {\r\n          history.push(\"/\");\r\n        }}\r\n      >\r\n        <h2>Obrigado à equipe MERCADOU pela oportunidade.</h2>\r\n        <p>Att. Marcello Carvalhal Santos</p>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","export default function calculateShipCapacity({ apiData, weight }) {\r\n  // this function will calculate the ship capacity and the weight\r\n  try {\r\n    // gets the cargo capacity from ship\r\n    const maxCapacity = apiData.millFalcon.cargo_capacity;\r\n    // defines the percent to calculate\r\n    const percent = 99;\r\n\r\n    // get the result of 99% of cargo\r\n    let maxPercentualCapacity = maxCapacity * (percent / 100);\r\n    // set it to capacity\r\n    let capacity = maxPercentualCapacity;\r\n\r\n    // loop through response\r\n    for (let i = 0; i < apiData.randomChars.length; i++) {\r\n      // and add to capacity all five random character's mass\r\n      capacity += parseFloat(apiData.randomChars[i].mass);\r\n    }\r\n\r\n    // add your weight to capacity\r\n    capacity += weight;\r\n\r\n    // store the value to shipCapacity\r\n    let shipCapacity = capacity;\r\n\r\n    // return it\r\n    return shipCapacity;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Story from \"./pages/Story\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/story\" component={Story} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\nimport Routes from \"./routes\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return <Routes />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}